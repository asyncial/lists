#! /bin/sh

#####################################################
# Name: lists
#
# Helper script the lists filesystem structure
#
# Usage: lists <action> [list] [listitem]
#
# Dependencies: tree
#
# License: GPLv3
#
# Version: 0.3
# Author: asyncial
# Date of Creation: 2018-04-23
######################################################

# Settings
LIST_ROOT=$HOME/doc/lists

# Functions
init () {
    mkdir -p "$LIST_ROOT"
}

add () {
    mkdir -p "$LIST_ROOT/$LIST"
    if [ "$LIST_ITEM" != "" ]; then
        touch "$LIST_ROOT/$LIST/$LIST_ITEM"
    fi
}

del () {
    if [ "$LIST_ITEM" = "" ]; then
        rm -rf "${LIST_ROOT:?}/$LIST"
    else
        rm "$LIST_ROOT/$LIST/$LIST_ITEM"
    fi
}

rename () {
    if [ "$NEW_ITEM_NAME" = "" ]; then
        cd "$LIST_ROOT" || return
        mv "$LIST" "$LIST_ITEM"
    else
        cd "$LIST_ROOT/$LIST" || return
        mv "$LIST_ITEM" "$NEW_ITEM_NAME"
    fi
}

show () {
    local tree_command
    if [ "$LIST_ITEM" = "all" ] || [ "$LIST" = "all" ]; then
        tree_command="tree --noreport -a"
    else
        tree_command="tree --noreport"
    fi
    if [ "$LIST" = "" ] || [ "$LIST" = "all" ]; then
        cd "$LIST_ROOT" || return
        $tree_command
    elif [ "$LIST" = "lists" ]; then
        cd "$LIST_ROOT" || return
        ${tree_command} -d
    else
        cd "$LIST_ROOT/$LIST" || return
        $tree_command
    fi
}

finish () {
    mv "$LIST_ROOT/$LIST/$LIST_ITEM" "$LIST_ROOT/$LIST/.$LIST_ITEM"
}

edit () {
    $EDITOR "$LIST_ROOT/$LIST/$LIST_ITEM"
}

help () {
    case $LIST in
        init) echo "This action should be executed first and only once. It creates the \
necessary folder for this tool to work."
            ;;
        add) echo "This action adds a new list or a new item to a list. Example:"
            echo "lists add todo                      Adds the list \"todo\"."
            echo "lists add todo \"buy groceries\"      Adds \"buy groceries\" to the \
list \"todo\"."
            ;;
        del) echo "This action deletes a existing list or an existing list item. Example:"
            echo "lists del todo                      Deletes the list \"todo\", \
including all of it's items."
            echo "lists del todo \"buy groceries\"      Deletes the item \
\"buy groceries\" from the list \"todo\"."
            ;;
        show) echo "This action shows your lists and list items. Example:"
            echo "lists show                            Shows all lists and items."
            echo "lists show lists                      Shows all lists."
            echo "lists show todo                       Shows all items in \"todo\"."
            echo "lists show all                        Shows all lists and all items, \
including the finished ones."
            echo "lists show todo all                   Shows all list items, including \
including the finished ones, in \"todo\"."
            ;;
        finish) echo "This action marks a list item as finished. Example:"
            echo "lists finish todo \"buy groceries\"   Marks \"buy groceries\" in \
the list \"todo\" as finished."
            ;;
        edit) echo "This action opens a file to take notes about a specific list item. \
Example:"
            echo "lists edit todo \"buy groceries\"     Opens a text editor for you to \
add additional comments and note to the item \"buy groceries\", for example a shopping \
list."
            ;;
        rename) echo "This action renames a list or a list item. Example:"
            echo "lists rename todo done                Rename the list \"todo\" to \
\"done\""
            echo "lists rename todo \"buy groceries\" \"buy candy\""
            echo "      Renames the list item \"buy groceries\" to \"buy candy\""
        ;;
        *) echo "There are help topics for the following actions:"
            echo "init, add, del, edit, finish, show and rename"
            echo "Open the desired help topic like this:"
            echo "lists help <topic>"
            ;;
    esac
}

# Main functionality. Evaluates the given arguments.

main () {
    local usage
    usage="$(basename "$0") <action> [list] [listitem] [all/new name]. $(basename "$0") help for more."
    local action
    action=$1
    LIST=$2
    LIST_ITEM=$3
    NEW_ITEM_NAME=$4

    case $action in
        init) init
            ;;
        add) add
            ;;
        del) del
            ;;
        show) show
            ;;
        rename) rename
            ;;
        finish) finish
            ;;
        edit) edit
            ;;
        help) help
            ;;
        *) show
            echo "$usage"
            ;;
    esac
}
main "$@"
